/**
 * @Author eunji
 */
package machine_test;

//字符串相关
public class Strand {

    //第一个（最后一个）只出现一次的字符

    //子串替换

    //判断两个字符串是否互为变位词
    //遍历第一个字符串，统计每个字符出现的次数，再遍历第二个字符串，递减每个字符出现的次数
    //若最终某个字符出现的次数不为0（大于0，表示第二个字符串含有较少的字符，小于0，表示含有较多的字符），则返回false

    //判断两个字符串是否互为旋转词
    //将第一个字符串与自身拼接成一个新字符串，判断第二个字符串在新字符串中出现的位置（字符串匹配）
    //若存在，则返回true

    //字符串的所有排列


    //字符串的所有组合


    //字符串的交错组成

    //0左边必有1的二进制字符串数量


    //最长不含重复字符子串
    //维护一个哈希表，保存所有字符最近一次出现的位置，从左到右遍历字符串
    //维护一个变量，保存以当前字符的前一个字符结尾的最长不含重复字符子串的开始位置的前一个位置
    //比较上面的前一个位置与当前字符最近一次出现的位置，得到以当前字符结尾的最长不含重复字符子串的长度
    //更新上面的前一个位置，当前字符最近一次出现的位置，最长不含重复字符子串的长度以及结尾字符的位置

    //判断一个较短字符串是否为一个较长字符串的子序列
    //若是子序列，则较短字符串所有的字符将按顺序出现在较长字符串中
    //从左到右同时遍历两个字符串，比较对应的字符
    //若字符相等，则同时向右移动一步，若字符不相等，则较长字符串向右移动一步
    //若较短字符串能够遍历完，则是子序列，否则不是子序列
}
